#!/bin/sh

set -e

. "$(dirname $0)/config.sh"

for ARCH in $ARCHS
do
	ISO="${ISOPREFIX}-ubuntu-$VERSION-$DISTRO-$ARCH.iso"
	VBOX="${LABEL}-ubuntu-$VERSION-$DISTRO-$ARCH"

	# Create and configure a virtual machine through VirtualBox.
	VBoxManage createvm \
		--name "$VBOX" \
		--basefolder "$PWD" \
		--register \
		|| true
	VBoxManage modifyvm "$VBOX" \
		--ostype "Ubuntu$([ "$ARCH" = "i386" ] || echo _64)" \
		--memory 360 \
		--vram 12 \
		--acpi on --ioapic on \
		--cpus 1 \
		--pae "$([ "$ARCH" = "i386" ] && echo on || echo off)" \
		--hwvirtex on \
		--hwvirtexexcl off \
		--nestedpaging on \
		--accelerate3d off \
		--nic1 nat \
		--natpf1 guestssh,tcp,,2222,,22 \
		--audio none \
		--clipboard disabled \
		--usb off --usbehci off \
		--vrdp off \
		--teleporter off

	# Mount the custom installation ISO.
	VBoxManage openmedium dvd "$PWD/$ISO" || true
	VBoxManage storagectl "$VBOX" \
		--name IDE \
		--add ide
	VBoxManage storageattach "$VBOX" \
		--storagectl IDE \
		--port 1 --device 0 \
		--type dvddrive --medium "$PWD/$ISO"

	# Mount a virtual hard disk.
	VBoxManage createhd \
		--filename "$PWD/$VBOX/$VBOX.vmdk" \
		--size 40000 \
		--format VMDK \
		|| true
	VBoxManage storagectl "$VBOX" \
		--name SATA \
		--add sata
	VBoxManage storageattach "$VBOX" \
		--storagectl SATA \
		--port 0 --device 0 \
		--type hdd --medium "$PWD/$VBOX/$VBOX.vmdk"

	# Start the virtual machine and the OS installation.  This will take
	# a while so this time it gets a GUI.  Spin slowly until SSH is usable.
	VBoxManage startvm "$VBOX" --type gui
	until eval "$SSH exit"
	do
		sleep 60
	done

	# Attach the VBoxGuestAdditions ISO, implicitly detaching the custom
	# installation ISO in the process.  Install the additions and empty
	# the drive.
	VBoxManage storageattach "$VBOX" \
		--storagectl IDE \
		--port 1 --device 0 \
		--type dvddrive --medium "$VBOX_GUEST_ADDITIONS"
	eval "$SSH \"
		set -e
		sudo apt-get -y install linux-headers-\\\$(uname -r) build-essential
		until sudo mount /dev/cdrom /media/cdrom
		do
			sleep 1
		done
		sudo /media/cdrom/VBoxLinuxAdditions-$([ "$ARCH" = "i386" ] \
			&& echo x86 \
			|| echo amd64
		).run
		sudo umount /media/cdrom
	\""
	VBoxManage storageattach "$VBOX" \
		--storagectl IDE \
		--port 1 --device 0 \
		--type dvddrive --medium emptydrive

	# Shutdown the virtual machine.
	eval "$SSH \"sudo shutdown -h now\""
	until VBoxManage showvminfo "$VBOX" | grep "^State: *powered off"
	do
		sleep 1
	done

done
